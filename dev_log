rails new sample_app
cd '/home/user/Repositories/Ruby_Projects/sample_app'

bundle install --without production
bundle update
bundle install

bundle show [gemname]
bundle show rails

rails server

#пропустил
Листинг 3.2. Динамическая генерация секретного токена.
config/initializers/secret_token.rb

git init
git add .
git commit -m "Initial commit"

git commit -am "Improve the README"

git remote add origin https://github.com/<username>/sample_app.git
git push -u origin master

heroku create
git push heroku master
heroku run rake db:migrate

Я рекомендую регулярно пушить и деплоить ваш пример приложения в процессе чтения учебника:
git push
git push heroku
heroku run rake db:migrate

heroku logs

при использовании Git, хорошей практикой является делать нашу работу в отдельной, а не в master ветке
git checkout -b static-pages

rails generate controller StaticPages home help about --no-test-framework

#Пример
$ rails generate controller FooBars baz quux
$ rails destroy  controller FooBars baz quux

rails generate model Foo bar:string baz:integer
rails destroy model Foo

rake db:migrate
rake db:rollback
Для того чтобы откатить к самому началу (все миграции), мы можем использовать
rake db:migrate VERSION=0

rails server
http://localhost:3000/
http://localhost:3000/

git add .
git commit -m "Add a StaticPages controller"

bundle exec rspec spec/requests/static_pages_spec.rb

$ git add .
$ git commit -m "Finish static pages"

Затем объедините изменения с мастер веткой

$ git checkout master
$ git merge static-pages

$ git push
$ git push heroku

git checkout -b filling-in-layout

следует объединить изменения с мастер-веткой:
$ git add .
$ git commit -m "Finish layout and routes"
$ git checkout master
$ git merge filling-in-layout

Также вы можете отправить изменения на GitHub:
$ git push
Наконец, вы можете развернуть приложение на Heroku:
$ git push heroku

heroku open
Если столкнулись с проблемами, попробуйте выполнить
$ heroku logs

git checkout master
$ git checkout -b modeling-users


bundle exec rake db:migrate
bundle exec rake db:rollback

rails console --sandbox

user = User.new(name: "admin", email: "admin@example.com")

http://www.rubular.com/

VALID_EMAIL_REGEX = /\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i
VALID_EMAIL_REGEX = /\A[\w+\-.]+@[a-z\d\-]+(\.[a-z]+)*\.[a-z]+\z/i

rails generate migration add_index_to_users_email

bundle exec rake db:migrate

rails generate migration add_password_digest_to_users password_digest:string

bundle exec rake db:migrate
bundle exec rake test:prepare

rails console
User.create(name: "admin", email: "admin@example.com", password: "admin", password_confirmation: "admin")
User.create(name: "example", email: "example@railstutorial.org", password: "example", password_confirmation: "example")
User.create(name: "test", email: "test@test.com", password: "test", password_confirmation: "test")

rails console
user = User.first
user = User.find_by(email: "example@railstutorial.org")
user.update_attributes(name: "admin",
                       email: "admin@admin.com",
                       password: "admin",
                       password_confirmation: "admin")


git checkout master
git checkout -b sign-up


#Окружения Rails
#Дефолтным окружением для Rails консоли является development:
  $ rails console
  Loading development environment
  >> Rails.env
  => "development"
  >> Rails.env.development?
  => true
  >> Rails.env.test?
  => false

  $ rails console test
  Loading test environment
  >> Rails.env
  => "test"
  >> Rails.env.test?
  => true

  $ rails server --environment production
  $ bundle exec rake db:migrate RAILS_ENV=production

  $ heroku run console
  Ruby console for yourapp.herokuapp.com
  >> Rails.env
  => "production"
  >> Rails.env.production?
  => true
  
  
  ActiveModel::SecurePassword.min_cost = true
  
  bundle exec rake db:reset
  bundle exec rake test:prepare
  
git add .
git commit -m "Finish user signup"
git checkout master
git merge sign-up

config/environments/production.rb
config.force_ssl = true

git commit -a -m "Add SSL in production"
git push heroku

git commit -a -m "Add files"

heroku run rake db:migrate
heroku open
heroku logs

git checkout -b sign-in-out

rails generate controller Sessions --no-test-framework
$ rails generate integration_test authentication_pages

rake routes

rails generate migration add_remember_token_to_users

bundle exec rake db:migrate
bundle exec rake test:prepare

# select
sqlite3 -line db/development.sqlite3 "select * from users"

#app/assets/javascripts/application.js

//= require jquery
//= require jquery_ujs
//= require bootstrap
//= require turbolinks
//= require_tree .


git add .
git commit -m "Finish sign in"
git checkout master
git merge sign-in-out
  
  
